@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use 'internal' as *;

$xyz-modes: ['in', 'out', 'appear',]; // Appear must come last for specificity
$xyz-modes-all: list.join(['all'], $xyz-modes);

$xyz-index-levels: 20 !default;

$xyz-utility-eases: (
  ease: ease,
  linear: linear,

  in: ease-in,
  // in-quad: cubic-bezier(0.550, 0.085, 0.680, 0.530),
  // in-cubic: cubic-bezier(0.550, 0.055, 0.675, 0.190),
  // in-quart: cubic-bezier(0.895, 0.030, 0.685, 0.220),
  // in-quint: cubic-bezier(0.755, 0.050, 0.855, 0.060),
  // in-sine: cubic-bezier(0.470, 0.000, 0.745, 0.715),
  // in-expo: cubic-bezier(0.950, 0.050, 0.795, 0.035),
  // in-circ: cubic-bezier(0.600, 0.040, 0.980, 0.335),
  in-back: cubic-bezier(0.600, -0.280, 0.735, 0.045),

  out: ease-out,
  // out-quad: cubic-bezier(0.250, 0.460, 0.450, 0.940),
  // out-cubic: cubic-bezier(0.215, 0.610, 0.355, 1.000),
  // out-quart: cubic-bezier(0.165, 0.840, 0.440, 1.000),
  // out-quint: cubic-bezier(0.230, 1.000, 0.320, 1.000),
  // out-sine: cubic-bezier(0.390, 0.575, 0.565, 1.000),
  // out-expo: cubic-bezier(0.190, 1.000, 0.220, 1.000),
  // out-circ: cubic-bezier(0.075, 0.820, 0.165, 1.000),
  out-back: cubic-bezier(0.175, 0.885, 0.320, 1.275),

  in-out: ease-in-out,
  // in-out-quad: cubic-bezier(0.455, 0.030, 0.515, 0.955),
  // in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1.000),
  // in-out-quart: cubic-bezier(0.770, 0.000, 0.175, 1.000),
  // in-out-quint: cubic-bezier(0.860, 0.000, 0.070, 1.000),
  // in-out-sine: cubic-bezier(0.445, 0.050, 0.550, 0.950),
  // in-out-expo: cubic-bezier(1.000, 0.000, 0.000, 1.000),
  // in-out-circ: cubic-bezier(0.785, 0.135, 0.150, 0.860),
  in-out-back: cubic-bezier(0.680, -0.550, 0.265, 1.550),
) !default;

$xyz-utility-times: (
  0: 0s,
  1: .1s,
  2: .2s,
  3: .3s,
  4: .4s,
  5: .5s,
  10: 1s,
  15: 1.5s,
  20: 2s,
  25: 2.5s,
  30: 3s,
) !default;

$xyz-utility-iterations: (
  0: 0,
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  infinite: infinite,
) !default;

$xyz-utility-fades: (
  0: 0,
  25: .25,
  50: .5,
  75: .75,
  100: 1,
) !default;

$xyz-utility-translations: (
  0: 0px,
  1: 10px,
  2: 20px,
  3: 30px,
  4: 40px,
  5: 50px,
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
) !default;

$xyz-utility-translations-z: (
  0: 0px,
  1: 10px,
  2: 20px,
  3: 30px,
  4: 40px,
  5: 50px,
) !default;

$xyz-utility-rotations: (
  0: 0deg,
  1: 10deg,
  2: 20deg,
  3: 30deg,
  4: 40deg,
  5: 50deg,
  25: .25turn,
  50: .50turn,
  75: .75turn,
  100: 1turn,
) !default;

$xyz-utility-scales: (
  0: 0,
  1: 0.025,
  2: 0.05,
  3: 0.075,
  4: 0.1,
  5: 0.125,
  25: .25,
  50: .5,
  75: .75,
  100: 1,
) !default;

$xyz-utility-origins: (
 center: center,
 top: top,
 bottom: bottom,
 left: left,
 right: right,
 top-left: top left,
 top-right: top right,
 bottom-left: bottom left,
 bottom-right: bottom right,
) !default;

$xyz-utilities: (
  ease: (
    vars: ['ease'],
    default-val: var(--xyz-ease-default),
    utility-map: $xyz-utility-eases,
    modes: list.append($xyz-modes-all, 'move'),
  ),
  duration: (
    vars: ['duration'],
    default-val: var(--xyz-duration-default),
    utility-map: $xyz-utility-times,
    modes: list.append($xyz-modes-all, 'move'),
  ),
  delay: (
    vars: ['delay'],
    default-val: var(--xyz-delay-default),
    utility-map: $xyz-utility-times,
    modes: list.append($xyz-modes-all, 'move'),
  ),
  stagger: (
    vars: ['stagger'],
    default-val: var(--xyz-stagger-default),
    utility-map: $xyz-utility-times,
  ),
  stagger-rev: (
    vars: ['stagger-rev'],
    default-val: var(--xyz-stagger-default),
    utility-map: $xyz-utility-times,
  ),
  iterate: (
    vars: ['iterate'],
    default-val: var(--xyz-iterate-default),
    utility-map: $xyz-utility-iterations,
  ),
  origin: (
    vars: ['origin'],
    default-val: var(--xyz-origin-default),
    utility-map: $xyz-utility-origins,
  ),
  fade: (
    vars: ['fade'],
    default-val: calc(1 - var(--xyz-fade-default)),
    utility-map: $xyz-utility-fades,
    transform-func: meta.get-function('xyz-one-minus-val'),
  ),
  right: (
    vars: ['translate-x'],
    default-val: var(--xyz-translate-default),
    utility-map: $xyz-utility-translations,
  ),
  left: (
    vars: ['translate-x'],
    default-val: calc(var(--xyz-translate-default) * -1),
    utility-map: $xyz-utility-translations,
    transform-func: meta.get-function('xyz-negative-val'),
  ),
  down: (
    vars: ['translate-y'],
    default-val: var(--xyz-translate-default),
    utility-map: $xyz-utility-translations,
  ),
  up: (
    vars: ['translate-y'],
    default-val: calc(var(--xyz-translate-default) * -1),
    utility-map: $xyz-utility-translations,
    transform-func: meta.get-function('xyz-negative-val'),
  ),
  front: (
    vars: ['translate-z'],
    default-val: var(--xyz-translate-default),
    utility-map: $xyz-utility-translations-z,
  ),
  back: (
    vars: ['translate-z'],
    default-val: calc(var(--xyz-translate-default) * -1),
    utility-map: $xyz-utility-translations-z,
    transform-func: meta.get-function('xyz-negative-val'),
  ),
  flip-up: (
    vars: ['rotate-x'],
    default-val: var(--xyz-rotate-default),
    utility-map: $xyz-utility-rotations,
  ),
  flip-down: (
    vars: ['rotate-x'],
    default-val: calc(var(--xyz-rotate-default) * -1),
    utility-map: $xyz-utility-rotations,
    transform-func: meta.get-function('xyz-negative-val'),
  ),
  flip-right: (
    vars: ['rotate-y'],
    default-val: var(--xyz-rotate-default),
    utility-map: $xyz-utility-rotations,
  ),
  flip-left: (
    vars: ['rotate-y'],
    default-val: calc(var(--xyz-rotate-default) * -1),
    utility-map: $xyz-utility-rotations,
    transform-func: meta.get-function('xyz-negative-val'),
  ),
  turn-cw: (
    vars: ['rotate-z'],
    default-val: var(--xyz-rotate-default),
    utility-map: $xyz-utility-rotations,
  ),
  turn-ccw: (
    vars: ['rotate-z'],
    default-val: calc(var(--xyz-rotate-default) * -1),
    utility-map: $xyz-utility-rotations,
    transform-func: meta.get-function('xyz-negative-val'),
  ),
  small: (
    vars: ['scale-x', 'scale-y', 'scale-z'],
    default-val: calc(1 - var(--xyz-scale-default)),
    utility-map: $xyz-utility-scales,
    transform-func: meta.get-function('xyz-one-minus-val'),
  ),
  big: (
    vars: ['scale-x', 'scale-y', 'scale-z'],
    default-val: calc(1 + var(--xyz-scale-default)),
    utility-map: $xyz-utility-scales,
    transform-func: meta.get-function('xyz-one-plus-val'),
  ),
  narrow: (
    vars: ['scale-x'],
    default-val: calc(1 - var(--xyz-scale-default)),
    utility-map: $xyz-utility-scales,
    transform-func: meta.get-function('xyz-one-minus-val'),
  ),
  wide: (
    vars: ['scale-x'],
    default-val: calc(1 + var(--xyz-scale-default)),
    utility-map: $xyz-utility-scales,
    transform-func: meta.get-function('xyz-one-plus-val'),
  ),
  short: (
    vars: ['scale-y'],
    default-val: calc(1 - var(--xyz-scale-default)),
    utility-map: $xyz-utility-scales,
    transform-func: meta.get-function('xyz-one-minus-val'),
  ),
  tall: (
    vars: ['scale-y'],
    default-val: calc(1 + var(--xyz-scale-default)),
    utility-map: $xyz-utility-scales,
    transform-func: meta.get-function('xyz-one-plus-val'),
  ),
  thin: (
    vars: ['scale-z'],
    default-val: calc(1 - var(--xyz-scale-default)),
    utility-map: $xyz-utility-scales,
    transform-func: meta.get-function('xyz-one-minus-val'),
  ),
  thick: (
    vars: ['scale-z'],
    default-val: calc(1 + var(--xyz-scale-default)),
    utility-map: $xyz-utility-scales,
    transform-func: meta.get-function('xyz-one-plus-val'),
  ),
);
