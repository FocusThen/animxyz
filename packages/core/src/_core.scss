@use 'variables' as *;
@use 'functions' as *;

@mixin xyz-core() {
  @include xyz-include-once('core') {
    @include xyz-make-keyframes('keyframes', false) using ($mode) {
      from {
        $fade: xyz-fallback-var('fade', $mode, 1);

        $translate-x: xyz-fallback-var('translate-x', $mode, 0);
        $translate-y: xyz-fallback-var('translate-y', $mode, 0);
        $translate-z: xyz-fallback-var('translate-z', $mode, 0);
        $rotate-x: xyz-fallback-var('rotate-x', $mode, 0);
        $rotate-y: xyz-fallback-var('rotate-y', $mode, 0);
        $rotate-z: xyz-fallback-var('rotate-z', $mode, 0);
        $scale-x: xyz-fallback-var('scale-x', $mode, 1);
        $scale-y: xyz-fallback-var('scale-y', $mode, 1);
        $scale-z: xyz-fallback-var('scale-z', $mode, 1);

        $transform: xyz-fallback-var('transform', $mode,
          translate3d(#{$translate-x}, #{$translate-y}, #{$translate-z})
          rotateX(#{$rotate-x}) rotateY(#{$rotate-y}) rotateZ(#{$rotate-z})
          scale3d(#{$scale-x}, #{$scale-y}, #{$scale-z})
        );

        opacity: $fade;
        transform: $transform;
      }
    }

    :root {
      --xyz-ease-default: #{xyz-utility-ease('ease')};
      --xyz-duration-default: #{xyz-utility-time('3')};
      --xyz-delay-default: 0s;
      --xyz-stagger-default: #{xyz-utility-time('3')};
      --xyz-iterate-default: 1;

      --xyz-origin-default: #{xyz-utility-origin('center')};

      --xyz-fade-default: #{xyz-utility-fade('100')};

      --xyz-translate-default: #{xyz-utility-translation('3')};
      --xyz-rotate-default: #{xyz-utility-rotation('25')};
      --xyz-scale-default: #{xyz-utility-scale('50')};
    }

    .xyz-in, .xyz-out, .xyz-appear, .xyz-nested, .xyz-in-nested, .xyz-out-nested, .xyz-appear-nested {
      @for $i from 1 through $xyz-index-levels {
        &:nth-child(#{$i}) {
          --xyz-index: #{$i - 1};
        }
        &:nth-last-child(#{$i}) {
          --xyz-index-rev: #{$i - 1};
        }
      }
    }

    @each $mode in $xyz-modes {
      .xyz-#{$mode}, .xyz-#{$mode} .xyz-nested, .xyz-#{$mode} .xyz-#{$mode}-nested {
        @include xyz-animation($mode);

        &.xyz-absolute, &.xyz-#{$mode}-absolute {
          @extend %xyz-pos-absolute;
        }

        &.xyz-paused, &.xyz-#{$mode}-paused {
          @extend %xyz-play-paused;
        }

        &.xyz-none, &.xyz-#{$mode}-none {
          @extend %xyz-anim-initial;
        }
      }
    }

    .xyz-move {
      $duration: var(--xyz-#{xyz-mode-name('duration', 'move')}, 0s);
      $ease: var(--xyz-#{xyz-mode-name('ease', 'move')}, var(--xyz-ease-default));
      $delay: var(--xyz-#{xyz-mode-name('delay', 'move')}, 0s);
      transition: transform #{$duration} #{$ease} #{$delay};
    }

    @media (prefers-reduced-motion: reduce) {
      .xyz-move {
        transition: none !important;
      }
    }

    %xyz-pos-absolute {
      position: absolute !important;
    }

    %xyz-play-paused {
      animation-play-state: paused !important;
    }

    %xyz-anim-initial {
      animation: initial !important;
    }

    [xyz] {
      @include xyz-set-all();
    }

    [xyz~=inherit] {
      @include xyz-set-all(inherit);
    }  
  }
}
