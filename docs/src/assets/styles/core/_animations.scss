// ANIMXYZ -------------------------------------
@use 'sass:map';
@import '@animxyz/core';
@include xyz-all;

$mode-colors: (
  'in': rgba(var(--green-rgb), 0.75),
  'out': rgba(var(--red-rgb), 0.75),
  'appear': rgba(var(--yellow-rgb), 0.75),
);

@keyframes xray-scan {
  0% {
    left: 0;
    right: 100vw;
    backdrop-filter: invert(1);
  }
  50% {
    left: 0;
    right: 0;
  }
  100% {
    left: 100vw;
    backdrop-filter: invert(1);
  }
}

@keyframes xyz-xray-mode {
  0% {
    background-color: transparent;
  }
  25% {
    background-color: var(--xyz-xray-color);
  }
  75% {
    background-color: var(--xyz-xray-color);
  }
  100% {
    background-color: transparent;
  }
}

%xyz-xray-after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  padding: $sp-xxs;
  font-family: $font-stack-mono;
  font-size: $fs-m;
  font-weight: 600;
  text-align: left;
  pointer-events: none;
  z-index: 9999;
}

.xyz-xray {
  @each $mode in $xyz-modes {
    .xyz-#{$mode}, .xyz-#{$mode} .xyz-nested, .xyz-#{$mode} .xyz-#{$mode}-nested {
      $duration: xyz-var('duration', $mode);
      $delay: var(--xyz-active-delay, 0s);
      --xyz-xray-color: #{map.get($mode-colors, $mode)};
      position: relative;

      &::after {
        @extend %xyz-xray-after;
        animation: xyz-xray-mode $duration $ease-out $delay both;
      }
    }
  }

  [xyz] {
    position: relative;

    &:hover::after {
      @extend %xyz-xray-after;
      content: attr(xyz);
      color: black;
      text-shadow: 1px 1px 0 white;
      box-shadow: inset 0 0 0 3px black;
    }
  }
}
